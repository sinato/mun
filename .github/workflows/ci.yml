name: CI

on: [pull_request, push]

env:
  RUSTFLAGS: -Dwarnings

jobs:

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      - name: Install LLVM
        uses: ./.github/actions/install-llvm

      - name: Cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    runs-on: ${{ matrix.config.os }}
    needs: check
    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: "ubuntu-latest", toolchain: "stable"}
        - { os: "ubuntu-latest", toolchain: "beta"}
        - { os: "ubuntu-latest", toolchain: "nightly"}
        - { os: "windows-2016", toolchain: "stable"}
        - { os: "macOS-latest", toolchain: "stable"}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install toolchain
        if: ${{ matrix.config.toolchain == 'stable' }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: rustfmt

      - name: Install ${{ matrix.config.toolchain }} toolchain
        if: ${{ matrix.config.toolchain != 'stable' }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.config.toolchain }}
          override: true
          components: rustfmt

      - name: Install LLVM
        uses: ./.github/actions/install-llvm

      - name: Cargo build
        if: ${{ matrix.config.os == 'ubuntu-latest' && matrix.config.toolchain == 'stable' }}
        uses: actions-rs/cargo@v1
        continue-on-error: ${{ matrix.config.toolchain == 'nightly' }}
        with:
          command: build

      - name: Install mdbook
        if: ${{ matrix.config.os == 'ubuntu-latest' && matrix.config.toolchain == 'stable' }}
        uses: actions-rs/install@v0.1
        with:
          crate: mdbook
          version: latest
          use-tool-cache: true

      - name: mdbook test
        if: ${{ matrix.config.os == 'ubuntu-latest' && matrix.config.toolchain == 'stable' }}
        run: mdbook test book -L target/debug/deps

      - name: Cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: ${{ matrix.config.toolchain == 'nightly' }}
        with:
          command: test
          args: -- --nocapture

  style:
    name: Check Style
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: clippy, rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Install LLVM
        uses: ./.github/actions/install-llvm

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  tarpaulin:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: rustfmt

      - name: Install LLVM
        uses: ./.github/actions/install-llvm

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1

      - uses: codecov/codecov-action@v1
        with:
          file: ${{ steps.coverage.outputs.report }}
          name: ${{ matrix.os }}
  